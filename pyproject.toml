[project]
name = "antof_traffic"
version = "0.1.0"
description = "A Data-centric Traffic Management System"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "affine==2.4.0",
    "alembic==1.14.0",
    "apscheduler==3.11.0",
    "astroid==3.3.5",
    "attrs==24.2.0",
    "blinker==1.9.0",
    "cachetools==5.5.0",
    "certifi==2024.8.30",
    "charset-normalizer==3.4.0",
    "click==8.1.7",
    "click-plugins==1.1.1",
    "cligj==0.7.2",
    "cloudpickle==3.1.0",
    "contextily==1.6.2",
    "contourpy==1.3.1",
    "cycler==0.12.1",
    "dash==2.18.2",
    "dash-core-components==2.0.0",
    "dash-html-components==2.0.0",
    "dash-table==5.0.0",
    "databricks-sdk==0.38.0",
    "deprecated==1.2.15",
    "dill==0.3.9",
    "docker==7.1.0",
    "dotenv==0.9.9",
    "flask==3.0.3",
    "fonttools==4.55.0",
    "geographiclib==2.0",
    "geopandas==1.0.1",
    "geopy==2.4.1",
    "gitdb==4.0.11",
    "gitpython==3.1.43",
    "google-auth==2.36.0",
    "graphene==3.4.3",
    "graphql-core==3.2.5",
    "graphql-relay==3.2.0",
    "gunicorn==23.0.0",
    "idna==3.10",
    "importlib-metadata==8.5.0",
    "isort==5.13.2",
    "itsdangerous==2.2.0",
    "jinja2==3.1.4",
    "joblib==1.4.2",
    "kiwisolver==1.4.7",
    "mako==1.3.6",
    "markdown==3.7",
    "markupsafe==3.0.2",
    "matplotlib==3.9.3",
    "mccabe==0.7.0",
    "mercantile==1.2.1",
    "mlflow==2.18.0",
    "mlflow-skinny==2.18.0",
    "nest-asyncio==1.6.0",
    "numpy==2.1.3",
    "opentelemetry-api==1.28.2",
    "opentelemetry-sdk==1.28.2",
    "opentelemetry-semantic-conventions==0.49b2",
    "packaging==24.2",
    "pandas==2.2.3",
    "pandas-stubs==2.2.3.250308",
    "pillow==11.0.0",
    "platformdirs==4.3.6",
    "plotly==5.24.1",
    "protobuf==5.29.0",
    "psycopg2-binary==2.9.10",
    "pyarrow==18.1.0",
    "pyasn1==0.6.1",
    "pyasn1-modules==0.4.1",
    "pylint==3.3.2",
    "pyogrio==0.10.0",
    "pyparsing==3.2.0",
    "pyproj==3.7.0",
    "pytest==8.3.5",
    "python-dateutil==2.9.0.post0",
    "python-dotenv==1.0.1",
    "pytz==2024.2",
    "pyyaml==6.0.2",
    "rasterio==1.4.2",
    "requests==2.32.3",
    "retrying==1.3.4",
    "rsa==4.9",
    "scikit-learn==1.5.2",
    "scipy==1.14.1",
    "setuptools==75.6.0",
    "shapely==2.0.6",
    "six==1.16.0",
    "smmap==5.0.1",
    "sqlalchemy==2.0.36",
    "sqlparse==0.5.2",
    "tenacity==9.0.0",
    "threadpoolctl==3.5.0",
    "tomlkit==0.13.2",
    "typing-extensions==4.12.2",
    "tzdata==2024.2",
    "urllib3==2.2.3",
    "werkzeug==3.0.6",
    "wrapt==1.17.0",
    "xgboost==2.1.3",
    "xyzservices==2024.9.0",
    "zipp==3.21.0",
]


[tool.ruff]
target-version = "py312"

# Formatting
line-length = 120
indent-width = 4


exclude = [
    ".git",
    ".ruff_cache",
    "__pycache__",
    "venv",
    ".venv",
    "migrations",
    "build",
    "dist"
]

[tool.pytest.ini_options]
python_files = ["test_*.py", "*_tests.py"]
addopts = "-vv -W ignore::DeprecationWarning"
pythonpath = "src"

[tool.ruff.lint]
preview = true
select = [
    "E", # Errors
    "W", # Warnings
    "D", # Docstring rules
    "F",  # Pyflakes rules
    "B", # flake-8 bugbear rules
    "PL", # Pylint rules
    "EM", # Error handling
    "ICN", # Import conventions
    "LOG", # Logging rules
    "G",  # Logging format
    "T10", # Debug rules
    "PT", # PyTest style
    "RET", # Return statements
    "SIM", # Simplicity
    "ARG", # Unused arguments
    "C4", # Comprehensions
    "TC", # Type checker rules
    "C90", # Cyclomatic complexity
    "N",  # Naming conventions PEP8
    "UP", # Code modernization suggestions
    "TRY", # Try/Except rules
    "RUF", # Ruff specific rules
    "ANN", # Type annotations
    "ASYNC", # Asynchronous code rules
    "S", # Security issues
]

# Ignored rules
ignore = [
    "SIM910", # Use dict.get() without a default value
    "D100", # Docstrings in modules
    "D205", # Space after first line
    "D212", # Allow non-initialization in the first line of multiline comments
    "D202", # Allow blank lines after function docstrings
    "D400", # Punctuation in the first line
    "D415", # Punctuation in the first line

    # Methods documentation:
    "ANN002", # args
    "ARG004",  # args
    "ANN003", # kwargs
    "ARG004", # kwargs
    "ANN204", # Special methods
    "D102",   # Docstring in public method
    "D107",   # Docstring in __init__
]

# Per-file ignores
[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101",  # Allow asserts in tests
    "ANN201" # Not return type required
]

# McCabe complexity
[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.format]
indent-style = "space"
quote-style = "double"


